/*---------------------------------------------------------------------------------------------*/
/* arrow
/*---------------------------------------------------------------------------------------------*/

@function opposite-direction($directions) {
  $opposite-directions: ();
  $direction-map: (
    "top": "bottom",
    "right": "left",
    "bottom": "top",
    "left": "right",
    "center": "center",
    "ltr": "rtl",
    "rtl": "ltr"
  );

  @each $direction in $directions {
    $direction: to-lower-case($direction);

    @if map-has-key($direction-map, $direction) {
      $opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));
    } @else {
      @warn "No opposite direction can be found for `#{$direction}`. Direction omitted.";
    }
  }

  @return $opposite-directions;
}

$default-arrow-size: 1em !default;

@mixin arrow($side, $offset, $color: black, $size: $default-arrow-size) {
  @if not index(top right bottom left, $side) {
    @warn "Direction must be one of top, right, bottom or left.";
  } @else {
    position: absolute;
    width: 0;
    height: 0;
    content: "";
    z-index: 2;

    border-#{opposite-direction($side)}: $size * 1.5 solid $color;
    $perpendicular-borders: $size solid transparent;

    #{opposite-direction($side)}: 100%;

    @if $side == top or $side == bottom {
      left: $offset;
      border-left: $perpendicular-borders;
      border-right: $perpendicular-borders;
    } @else if $side == right or $side == left {
      top: $offset;
      border-bottom: $perpendicular-borders;
      border-top: $perpendicular-borders;
    }
  }
}
